{"version":3,"sources":["components/Header.js","components/Footer.js","Helpers.js","components/sections/Global.js","components/sections/HistoryLineChart.js","components/sections/CircularBarChart.js","components/sections/CountriesTable.js","components/sections/CasesDistribution.js","components/sections/VirusStats.js","components/sections/InfoBox.js","components/Loading.js","App.js","serviceWorker.js","index.js"],"names":["Header","updated","useState","moment","unix","fromNow","lastUpdated","setLastUpdated","useEffect","interval","setInterval","clearInterval","Footer","href","target","rel","numberWithCommas","x","toString","replace","Global","data","timeline","cases","deaths","recovered","Object","keys","length","prevCases","prevDeaths","prevRecovered","Grid","xs","sm","item","Card","className","HistoryLineChart","timelineArray","setTimelineArray","tempArray","map","key","date","format","CustomTooltip","payload","label","active","style","backgroundColor","value","md","height","margin","top","right","bottom","left","tickMargin","minTickGap","dataKey","width","tickFormatter","num","i","digits","si","symbol","rx","toFixed","nFormatter","content","animationDuration","type","stroke","CircularBarChart","name","fill","position","innerRadius","outerRadius","startAngle","endAngle","barSize","cornerRadius","background","fontSize","letterSpacing","formatter","verticalAlign","columns","id","align","CountriesTable","React","page","setPage","rowsPerPage","setRowsPerPage","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","TableBody","slice","row","hover","role","tabIndex","country","TablePagination","rowsPerPageOptions","component","count","onChangePage","event","newPage","onChangeRowsPerPage","CasesDistribution","countryData","restOfWorld","restOfWorldCases","forEach","push","COLORS","RADIAN","Math","PI","lg","labelLine","cx","cy","midAngle","percent","radius","index","cos","y","sin","textAnchor","dominantBaseline","nameKey","entry","VirusStats","globalData","deathRate","recoveryRate","nationsAffected","daysSince","diff","container","spacing","justify","InfoBox","Loading","display","justifyContent","alignItems","CircularProgress","size","App","props","componentDidMount","fetchData","then","setState","globalTimeline","countriesByCases","state","Promise","all","fetch","responses","response","json","catch","err","console","log","this","Container","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9eb3f868.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport moment from 'moment'\n\nexport default function Header({updated}) {\n\n  const [lastUpdated, setLastUpdated] = useState(moment.unix(updated / 1000).fromNow());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setLastUpdated(moment.unix(updated / 1000).fromNow());\n    }, 30000);\n\n    return () => { clearInterval(interval) }\n  })\n\n\n  return (\n    <header>\n      <h1>Coronavirus Tracker</h1> \n      <p>Last updated {lastUpdated}</p>\n    </header>\n  )\n}","import React from 'react'\n\nexport default function Footer() {\n  return (\n    <footer>\n      <p>Make sure to bookmark and share this page!</p>\n      <p>Made by <a href=\"https://aparr.dev/\" target=\"_blank\" rel=\"noopener noreferrer\">Adam Parr</a> - <a href=\"https://github.com/adamparr/coronavirus-tracker\" rel=\"noopener noreferrer\" target=\"_blank\">GitHub</a></p>\n    </footer>\n  )\n}\n","\nexport default function numberWithCommas(x) {\n  if (!x) return;\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport function nFormatter(num, digits = 0) {\n  var si = [\n    { value: 1, symbol: \"\" },\n    { value: 1E3, symbol: \"k\" },\n    { value: 1E6, symbol: \"M\" },\n    { value: 1E9, symbol: \"G\" },\n    { value: 1E12, symbol: \"T\" },\n    { value: 1E15, symbol: \"P\" },\n    { value: 1E18, symbol: \"E\" }\n  ];\n  var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  var i;\n  for (i = si.length - 1; i > 0; i--) {\n    if (num >= si[i].value) {\n      break;\n    }\n  }\n  return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n}","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport numberWithCommas from '../../Helpers'\n\nexport default function Global({data, timeline}) {\n\n  const { cases, deaths, recovered }  = data;\n  const yesterday = Object.keys(timeline)[Object.keys(timeline).length-1];\n  const { cases: prevCases, deaths: prevDeaths, recovered: prevRecovered } = timeline[yesterday];\n\n  return (\n    <>\n      <Grid xs={12} sm={4} item>\n        <Card className=\"card\">\n          <h3 className=\"card-title\">Cases</h3>\n          <span className=\"stat\">{numberWithCommas(cases)}</span>\n          <span className=\"prevStat\">{numberWithCommas(cases - prevCases)} today</span>\n          <div className=\"bar blue\"/>\n        </Card>\n      </Grid>\n\n      <Grid xs sm={4} item>\n        <Card className=\"card\">\n          <h3 className=\"card-title\">Deaths</h3>\n          <span className=\"stat\">{numberWithCommas(deaths)}</span>\n          <span className=\"prevStat\">{numberWithCommas(deaths - prevDeaths)} today</span>\n          <div className=\"bar red\"/>\n        </Card>\n      </Grid>\n\n      <Grid xs sm={4} item>\n        <Card className=\"card\">\n          <h3 className=\"card-title\">Recovered</h3>\n          <span className=\"stat\">{numberWithCommas(recovered)}</span>\n          <span className=\"prevStat\">{numberWithCommas(recovered - prevRecovered)} today</span>\n          <div className=\"bar green\"/>\n        </Card>\n      </Grid>\n    </>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport moment from 'moment'\nimport numberWithCommas, {nFormatter} from '../../Helpers'\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts'\n\nexport default function HistoryLineChart({timeline}) {\n\n  const [timelineArray, setTimelineArray] = useState([]);\n\n  useEffect(() => {\n    const tempArray = Object.keys(timeline).map(key => {\n      const date = moment(key).format(\"MMM D\");\n      return (\n        {\n          date,\n          cases: timeline[key]['cases'], \n          deaths: timeline[key]['deaths'], \n          recovered: timeline[key]['recovered'],\n        }\n      )\n    })\n\n    setTimelineArray(tempArray);\n\n  }, [timeline])\n\n  const CustomTooltip = ({ payload, label, active }) => {\n    if (!active) return null;\n\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"tt-label\">{label}</p>\n        <p className=\"tt-stat\" style={{backgroundColor: '#438ce6'}}>Cases: <span>{numberWithCommas(payload[0].value)}</span></p>\n        <p className=\"tt-stat\" style={{backgroundColor: '#e24f3f'}}>Deaths: <span>{numberWithCommas(payload[1].value)}</span></p>\n        <p className=\"tt-stat\" style={{backgroundColor: '#47bd61'}}>Recovered: <span>{numberWithCommas(payload[2].value)}</span></p>\n      </div>\n    )\n  }\n\n  const formatter = (value) => {\n    return nFormatter(value);\n  }\n\n  const duration = 3000;\n\n  return (\n    <Grid xs={12} md={8} item>\n      <Card className=\"card\" style={{ height: 400 }}>\n        <h3 className=\"card-title\">Global Change Over Time</h3>\n        <ResponsiveContainer>\n          <LineChart margin={{top: 30,right: 15,bottom: 15,left: 15}} data={timelineArray}>\n            <CartesianGrid />\n            <XAxis height={60} tickMargin={10} minTickGap={15} dataKey=\"date\" />\n            <YAxis width={30} tickFormatter={formatter} />\n            <Tooltip content={<CustomTooltip />} />\n            <Line animationDuration={duration} type=\"monotone\" dataKey=\"cases\" stroke=\"#438ce6\" />\n            <Line animationDuration={duration} type=\"monotone\" dataKey=\"deaths\" stroke=\"#e24f3f\" />\n            <Line animationDuration={duration} type=\"monotone\" dataKey=\"recovered\" stroke=\"#47bd61\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </Card>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport {\n  RadialBarChart,\n  RadialBar,\n  Legend,\n  ResponsiveContainer,\n  Tooltip\n} from \"recharts\";\n\nimport numberWithCommas from '../../Helpers'\n\nexport default function CircularBarChart({ data }) {\n  data = [\n    {\n      name: \"deaths\",\n      value: data[\"deaths\"],\n      fill: \"#e24f3f\"\n    },\n    {\n      name: \"recovered\",\n      value: data[\"recovered\"],\n      fill: \"#47bd61\"\n    },\n    {\n      name: \"cases\",\n      value: data[\"cases\"],\n      fill: \"#438ce6\"\n    }\n  ];\n\n  const CustomTooltip = ({ payload, label, active }) => {\n    if (!active) return null;\n    payload = payload[0].payload;\n\n    return (\n      <div className={`custom-tooltip ${ payload.name}`}>\n        <p className=\"tt-label\">{payload.name}: {numberWithCommas(payload.value)}</p>\n      </div>\n    )\n  }\n\n  const formatter = (value) => {\n    return numberWithCommas(value);\n  }\n\n  return (\n    <Grid xs={12} md={4} className=\"radial\" item>\n      <Card className=\"card\" style={{ height: 400, position: 'relative' }}>\n        <h3 className=\"card-title\">Radial Visualisation</h3>\n        <ResponsiveContainer>\n          <RadialBarChart\n            innerRadius=\"30%\" \n            outerRadius=\"95%\"\n            data={data} \n            startAngle={135} \n            endAngle={-135}\n            barSize={40}\n          >\n            <RadialBar\n              cornerRadius={10}\n              background={{fill: '#232731'}}\n              dataKey=\"value\"\n              animationDuration={3000}\n              label={{fill: 'white', position: 'insideStart', fontSize: '16', letterSpacing: '1', formatter}}\n            />\n            <Tooltip content={<CustomTooltip/>} />\n            <Legend verticalAlign=\"top\" height={10}/>\n          </RadialBarChart>\n        </ResponsiveContainer>\n      </Card>\n    </Grid>\n  );\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport numberWithCommas from '../../Helpers'\n\nconst columns = [\n  { id: 'country', label: 'Country', align: 'left' },\n  { id: 'cases', label: 'Cases' },\n  { id: 'todayCases', label: 'Cases Today' },\n  { id: 'deaths', label: 'Deaths' },\n  { id: 'todayDeaths', label: 'Deaths Today' },\n  { id: 'recovered', label: 'Recovered' },\n  { id: 'active', label: 'Active' },\n  { id: 'critical', label: 'Critical' },\n  { id: 'casesPerOneMillion', label: 'Cases / 1M pop' },\n  { id: 'deathsPerOneMillion', label: 'Deaths / 1M pop' },\n]\n\nexport default function CountriesTable({data}) {\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Grid xs={12} className=\"countriesTable\" item>\n      <Card className=\"card\" >\n        <TableContainer>\n        <Table stickyHeader aria-label=\"table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align ? column.align : 'center'}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={`${row.country}`}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell \n                      key={`${column.id}-${value}`} \n                      align={column.align ? column.align : 'center'}\n                      className={((column.id === 'todayCases' || column.id === \"todayDeaths\") && value) ? 'highlight' : null}\n                      >\n                        { ((column.id === 'todayCases' || column.id === \"todayDeaths\") && value) ? '+' : null}{value ? numberWithCommas(value) : '-'}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={10}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n\n      </Card>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport { PieChart, Pie, Cell, ResponsiveContainer, Tooltip } from 'recharts'\nimport numberWithCommas from '../../Helpers'\n\nexport default function CasesDistribution({countryData}) {\n\n  const slice = 7;\n  const restOfWorld = countryData.slice(slice);\n  var restOfWorldCases = 0;\n\n  restOfWorld.forEach((country) => {\n    restOfWorldCases += country.cases;\n  })\n\n  var data = countryData.slice(0,slice);\n  data.push({country: 'Other', cases: restOfWorldCases});\n\n  const COLORS = ['#692424', '#692441', '#692454', '#692469', '#5b2469', '#4a2469', '#362469', '#222368'];\n\n  const RADIAN = Math.PI / 180;\n  const renderCustomizedLabel = ({\n    cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n  }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.75;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n      <text x={x} y={y} fill=\"white\" textAnchor='middle' dominantBaseline=\"middle\">\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };\n\n  const CustomTooltip = ({ payload, label, active }) => {\n    if (!active) return null;\n    data = payload[0].payload.payload;\n\n    return (\n      <div style={{backgroundColor: payload[0].payload.fill}} className={`custom-tooltip ${data.name}`}>\n        <p className=\"tt-label\">{data.country}: {numberWithCommas(data.cases)}</p>\n      </div>\n    )\n  }\n\n  return (\n    <Grid xs={12} md={6} lg={4} item>\n      <Card className=\"card\" style={{ height: 350 }}>\n        <h3 className=\"card-title\">Distribution Of Cases By Country</h3>\n\n        <ResponsiveContainer>\n          <PieChart>\n            <Pie\n              data={data}\n              labelLine={false}\n              label={renderCustomizedLabel}\n              fill=\"#8884d8\"\n              dataKey=\"cases\"\n              outerRadius=\"85%\"\n              nameKey=\"country\"\n            >\n              {\n                data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n              }\n            </Pie>\n            <Tooltip content={<CustomTooltip/>} />\n          </PieChart>\n        </ResponsiveContainer>\n      </Card>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport moment from 'moment';\n\nexport default function VirusStats({countryData, globalData}) {\n\n  const deathRate = globalData.cases / globalData.deaths;\n  const recoveryRate = 100 - deathRate;\n\n  var nationsAffected = 0;\n\n  countryData.forEach(country => {\n    if (country.cases > 0) nationsAffected += 1;\n  })\n\n  const daysSince = moment().diff(moment.unix(1573948800),'days');\n\n\n  return (\n     <Grid xs={12} md={6} lg={5} item>\n      <Card className=\"card\" style={{ height: 350 }}>\n        <h3 className=\"card-title\">Virus Statistics</h3>\n\n        <Grid className=\"virusStats-grid\" container spacing={3} justify=\"center\">\n          <Grid xs={6}item>\n            <div>\n              <span className=\"stat green-text\">{recoveryRate.toFixed(2)}%</span>\n              <p className=\"stat-text\">Recovery Rate</p>\n            </div>\n          </Grid>\n          \n          <Grid xs={6}item>\n            <div>\n              <span className=\"stat red-text\">{deathRate.toFixed(2)}%</span>\n              <p className=\"stat-text\">Death Rate</p>\n            </div>\n          </Grid>\n\n          <Grid xs={6} item>\n            <div>\n              <span className=\"stat blue-text\">{nationsAffected}</span>\n              <p className=\"stat-text\">Nations Affected</p>\n            </div>\n          </Grid>\n\n          <Grid xs={6}item>\n            <div>\n              <span className=\"stat yellow-text\">{daysSince}<span className=\"days-small\">days</span></span>\n              <p className=\"stat-text\">Since First Case</p>\n            </div>\n          </Grid>\n        </Grid>\n\n      </Card>\n    </Grid>\n  )\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\n\nexport default function InfoBox() {\n  return (\n    <Grid xs={12} md={8} lg={3} item>\n      <Card className=\"card infoBox\" >\n      <h3 className=\"card-title\">How You Can Help</h3>\n\n      <p>\n        You should:\n      </p>\n      <ul>\n        <li><span className=\"blue-\">Limit leaving the house</span> to essential groceries, medicine, or work.</li>\n        <li><span className=\"red-\">Practice social distancing</span> - staying at least 2 meters away from anyone else.</li>\n        <li><span className=\"green-\">Wash your hands</span> often & as soon as you get home.</li>\n        <li><span className=\"yellow-\">Cover your mouth</span> and nose with a tissue when you cough or sneeze.</li>\n        <li><span className=\"blue-\">Avoid touching your face</span> if your hands aren't clean.</li>\n      </ul>\n\n      <p className=\"nhs-summary\">This is a summary taken from <a href=\"https://www.nhs.uk/conditions/coronavirus-covid-19/\" target=\"_blank\" rel=\"noopener noreferrer\">nhs.uk</a></p>\n\n      </Card>\n    </Grid>\n  );\n}\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nexport default function Loading() {\n  return (\n    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n      <CircularProgress size={80} />\n    </div>\n  )\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Footer from './components/Footer';\nimport Global from \"./components/sections/Global\";\nimport HistoryLineChart from './components/sections/HistoryLineChart';\nimport CircularBarChart from './components/sections/CircularBarChart';\nimport CountriesTable from './components/sections/CountriesTable';\nimport CasesDistribution from './components/sections/CasesDistribution';\nimport VirusStats from './components/sections/VirusStats';\nimport InfoBox from './components/sections/InfoBox';\n\nimport Loading from './components/Loading';\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      globalData: null, \n      globalTimeline: null,\n      countriesByCases: null\n    };\n  }\n\n  componentDidMount = () => {\n    this.fetchData().then(data => {\n      this.setState({\n        globalData: data[0],\n        globalTimeline: data[1],\n        countriesByCases: data[2]\n      })\n    })\n  };\n\n  fetchData() {\n    return Promise.all([\n      fetch(\"https://api.coronastatistics.live/all\"),\n      fetch(\"https://api.coronastatistics.live/timeline/global\"),\n      fetch(\"https://api.coronastatistics.live/countries?sort=cases\")\n    ]).then(responses => {\n      return Promise.all(responses.map(response => {\n        return response.json();\n      }))\n    }).then(data => {\n      return data;\n    }).catch(err => {\n      console.log(err);\n    })\n  }\n\n\n  render() {\n    if (!this.state.globalData || !this.state.globalTimeline || !this.state.countriesByCases ) return <Loading />\n    return (\n      <div className=\"App\">\n        <Header updated={this.state.globalData.updated} />\n        <Container className=\"globalStats\">\n          <Grid container spacing={3} justify=\"center\">\n            <Global data={this.state.globalData} timeline={this.state.globalTimeline} />\n\n            <CircularBarChart data={this.state.globalData} />\n            <HistoryLineChart timeline={this.state.globalTimeline} />\n\n            <CasesDistribution countryData={this.state.countriesByCases} />\n            <VirusStats countryData={this.state.countriesByCases} globalData={this.state.globalData} />\n            <InfoBox />\n\n            <CountriesTable data={this.state.countriesByCases} />\n          \n          </Grid>\n        </Container> \n        <Footer />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}